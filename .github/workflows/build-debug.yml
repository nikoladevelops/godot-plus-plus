name: Build GDExtension Debug

on:
  push:
  pull_request:

env:
  TARGET_TYPE: template_debug
  SCONS_CACHE: ${{ github.workspace }}/.scons-cache/

jobs:
  # Job for all non-macOS/iOS targets
  build-other-platforms:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { platform: linux, arch: x86_32, os: ubuntu-22.04, float: single }
          - { platform: linux, arch: x86_32, os: ubuntu-22.04, float: double }
          - { platform: linux, arch: x86_64, os: ubuntu-22.04, float: single }
          - { platform: linux, arch: x86_64, os: ubuntu-22.04, float: double }
          - { platform: linux, arch: arm32, os: ubuntu-22.04, float: single }
          - { platform: linux, arch: arm32, os: ubuntu-22.04, float: double }
          - { platform: linux, arch: arm64, os: ubuntu-22.04, float: single }
          - { platform: linux, arch: arm64, os: ubuntu-22.04, float: double }
          - { platform: windows, arch: x86_32, os: windows-latest, float: single }
          - { platform: windows, arch: x86_32, os: windows-latest, float: double }
          - { platform: windows, arch: x86_64, os: windows-latest, float: single }
          - { platform: windows, arch: x86_64, os: windows-latest, float: double }
          - { platform: android, arch: x86_64, os: ubuntu-22.04, float: single }
          - { platform: android, arch: x86_64, os: ubuntu-22.04, float: double }
          - { platform: android, arch: arm32, os: ubuntu-22.04, float: single }
          - { platform: android, arch: arm32, os: ubuntu-22.04, float: double }
          - { platform: android, arch: arm64, os: ubuntu-22.04, float: single }
          - { platform: android, arch: arm64, os: ubuntu-22.04, float: double }
          - { platform: web, arch: wasm32, os: ubuntu-22.04, float: single, threads: enabled }
          - { platform: web, arch: wasm32, os: ubuntu-22.04, float: double, threads: enabled }
          - { platform: web, arch: wasm32, os: ubuntu-22.04, float: single, threads: disabled }
          - { platform: web, arch: wasm32, os: ubuntu-22.04, float: double, threads: disabled }
    runs-on: ${{ matrix.target.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Read libname from SConstruct
        run: |
          LIBNAME=$(grep '^libname' SConstruct | cut -d'"' -f2)
          echo "LIBNAME=$LIBNAME" >> $GITHUB_ENV

      - name: Cache SCons build
        uses: actions/cache@v4
        with:
          path: ${{ env.SCONS_CACHE }}
          key: ${{ runner.os }}-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.target.float }}-${{ env.TARGET_TYPE }}

      - name: Build GDExtension (Debug)
        shell: bash
        run: |
          mkdir -p bin/${{ matrix.target.platform }}

          EXT=""
          case "${{ matrix.target.platform }}" in
            windows) EXT=".dll" ;;
            linux|android) EXT=".so" ;;
            web) EXT=".wasm" ;;
          esac

          THREAD_SUFFIX=""
          THREADS_ARG="false"
          if [ "${{ matrix.target.platform }}" = "web" ]; then
            if [ "${{ matrix.target.threads }}" = "enabled" ]; then
              THREAD_SUFFIX=".threads"
              THREADS_ARG="true"
            else
              THREAD_SUFFIX=".nothreads"
              THREADS_ARG="false"
            fi
          fi

          scons target=${{ env.TARGET_TYPE }} \
                platform=${{ matrix.target.platform }} \
                arch=${{ matrix.target.arch }} \
                precision=${{ matrix.target.float }} \
                threads=$THREADS_ARG use_lto=false

          OUTFILE="bin/${{ matrix.target.platform }}/${LIBNAME}.${{ matrix.target.platform }}.${{ env.TARGET_TYPE }}.${{ matrix.target.float }}${THREAD_SUFFIX}${EXT}"
          mv bin/*$EXT "$OUTFILE"

  # macOS job
  build-macos:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4

      - name: Read libname from SConstruct
        run: |
          LIBNAME=$(grep '^libname' SConstruct | cut -d'"' -f2)
          echo "LIBNAME=$LIBNAME" >> $GITHUB_ENV

      - name: Cache SCons build
        uses: actions/cache@v4
        with:
          path: ${{ env.SCONS_CACHE }}
          key: macos-${{ env.TARGET_TYPE }}

      - name: Build macOS single precision
        run: |
          mkdir -p bin/macos
          scons target=${{ env.TARGET_TYPE }} platform=macos arch=universal precision=single use_lto=false
          mv bin/*.framework "bin/macos/lib${LIBNAME}.macos.${{ env.TARGET_TYPE }}.single.framework"

      - name: Build macOS double precision
        run: |
          scons target=${{ env.TARGET_TYPE }} platform=macos arch=universal precision=double use_lto=false
          mv bin/*.framework "bin/macos/lib${LIBNAME}.macos.${{ env.TARGET_TYPE }}.double.framework"

  # iOS job (depends on macOS)
  build-ios:
    runs-on: macos-latest
    needs: build-macos
    steps:
      - uses: actions/checkout@v4

      - name: Read libname from SConstruct
        run: |
          LIBNAME=$(grep '^libname' SConstruct | cut -d'"' -f2)
          echo "LIBNAME=$LIBNAME" >> $GITHUB_ENV

      - name: Cache SCons build
        uses: actions/cache@v4
        with:
          path: ${{ env.SCONS_CACHE }}
          key: ios-${{ env.TARGET_TYPE }}

      - name: Build iOS single precision
        run: |
          mkdir -p bin/ios
          scons target=${{ env.TARGET_TYPE }} platform=ios arch=arm64 precision=single use_lto=false
          mv bin/*.xcframework "bin/ios/lib${LIBNAME}.ios.${{ env.TARGET_TYPE }}.single.xcframework"

      - name: Build iOS double precision
        run: |
          scons target=${{ env.TARGET_TYPE }} platform=ios arch=arm64 precision=double use_lto=false
          mv bin/*.xcframework "bin/ios/lib${LIBNAME}.ios.${{ env.TARGET_TYPE }}.double.xcframework"
