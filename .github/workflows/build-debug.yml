name: Build GDExtension (Debug)
on:
  workflow_dispatch:
  workflow_call:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        target:
          - { platform: linux, arch: x86_32, os: ubuntu-22.04 }
          - { platform: linux, arch: x86_64, os: ubuntu-22.04 }
          - { platform: linux, arch: arm32, os: ubuntu-22.04-arm }
          - { platform: linux, arch: arm64, os: ubuntu-22.04-arm }
          - { platform: windows, arch: x86_32, os: windows-latest }
          - { platform: windows, arch: x86_64, os: windows-latest }
          - { platform: windows, arch: arm64, os: windows-latest }
          - { platform: macos, arch: universal, os: macos-latest }
          - { platform: android, arch: x86_64, os: ubuntu-22.04 }
          - { platform: android, arch: arm32, os: ubuntu-22.04 }
          - { platform: android, arch: arm64, os: ubuntu-22.04 }
          - { platform: ios, arch: arm64, os: macos-latest }
          - { platform: web, arch: wasm32, os: ubuntu-22.04, threads: enabled }
          - { platform: web, arch: wasm32, os: ubuntu-22.04, threads: disabled }
        float-precision: [single, double]
        target-type: [template_debug]

    runs-on: ${{ matrix.target.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: true

      - name: Install multilib support
        if: ${{ matrix.target.platform == 'linux' && matrix.target.arch == 'x86_32' }}
        run: |
          sudo apt-get update && sudo apt-get install -y gcc-multilib g++-multilib

      - name: Setup godot-cpp
        uses: ./godot-cpp/.github/actions/setup-godot-cpp
        with:
          platform: ${{ matrix.target.platform }}
          em-version: 3.1.62

      - name: Restore .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-restore
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}

      # macOS build step (only runs for macOS)
      - name: Build godot-cpp for macOS
        if: ${{ matrix.target.platform == 'macos' }}
        run: |
          cd godot-cpp
          mkdir -p bin/macos
          scons platform=macos arch=x86_64 target=${{ matrix.target-type }} precision=${{ matrix.float-precision }} threads=${{ matrix.target.threads == 'enabled' && 'true' || 'false' }} use_lto=false
          scons platform=macos arch=arm64 target=${{ matrix.target-type }} precision=${{ matrix.float-precision }} threads=${{ matrix.target.threads == 'enabled' && 'true' || 'false' }} use_lto=false
          mkdir -p bin/libgodot-cpp.macos.${{ matrix.target-type }}.${{ matrix.float-precision }}.framework
          lipo -create bin/libgodot-cpp.macos.${{ matrix.target-type }}.x86_64.a bin/libgodot-cpp.macos.${{ matrix.target-type }}.arm64.a -output bin/libgodot-cpp.macos.${{ matrix.target-type }}.${{ matrix.float-precision }}.framework/libgodot-cpp
          mv bin/libgodot-cpp.macos.${{ matrix.target-type }}.${{ matrix.float-precision }}.framework ../bin/macos/

      # iOS build step (only runs for iOS)
      - name: Build godot-cpp for iOS
        if: ${{ matrix.target.platform == 'ios' }}
        run: |
          cd godot-cpp
          mkdir -p bin/ios
          scons platform=ios arch=arm64 target=${{ matrix.target-type }} precision=${{ matrix.float-precision }} threads=${{ matrix.target.threads == 'enabled' && 'true' || 'false' }}
          mv bin/libgodot-cpp.ios.${{ matrix.target-type }}.arm64.a ../bin/ios/

      - name: Build GDExtension
        shell: sh
        env:
          SCONS_CACHE: ${{ github.workspace }}/.scons-cache/
        run: |
          scons target=${{ matrix.target-type }} platform=${{ matrix.target.platform }} arch=${{ matrix.target.arch }} precision=${{ matrix.float-precision }} threads=${{ matrix.target.threads == 'enabled' && 'true' || 'false' }} use_lto=false
          if [ "${{ matrix.target.platform }}" = "ios" ]; then
            mkdir -p test_project/plugin_name_goes_here/bin/ios
            xcodebuild -create-xcframework \
              -library bin/ios/libplugin_name_goes_here.ios.${{ matrix.target-type }}.arm64${{ matrix.float-precision == 'double' && '.double' || '' }}.dylib \
              -output test_project/plugin_name_goes_here/bin/ios/libplugin_name_goes_here.ios.${{ matrix.target-type }}.${{ matrix.float-precision }}.xcframework
          fi

      - name: Save .scons_cache
        uses: ./godot-cpp/.github/actions/godot-cache-save
        with:
          scons-cache: ${{ github.workspace }}/.scons-cache/
          cache-name: ${{ matrix.target.platform }}_${{ matrix.target.arch }}_${{ matrix.float-precision }}_${{ matrix.target-type }}

      - name: Windows - Delete compilation files
        if: ${{ matrix.target.platform == 'windows' }}
        shell: pwsh
        run: |
          Remove-Item bin/* -Include *.exp,*.lib,*.pdb -Force

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot-plus-plus-${{ matrix.target.platform }}-${{ matrix.target.arch }}-${{ matrix.float-precision }}-${{ matrix.target-type }}${{ matrix.target.threads != '' && format('-{0}', matrix.target.threads) || '' }}
          path: |
            ${{ github.workspace }}/bin/**
            ${{ github.workspace }}/test_project/**
            !${{ github.workspace }}/bin/**/libgodot-cpp*.a

  merge:
    runs-on: ubuntu-22.04
    needs: build
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          name: godot-plus-plus-debug
          pattern: godot-plus-plus-*
          delete-merged: true
